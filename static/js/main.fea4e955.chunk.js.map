{"version":3,"sources":["Components/Calendar/index.js","App.js","serviceWorker.js","index.js"],"names":["Calendar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedMonth","moment","selectedDay","startOf","showing","showCurrentWeek","selectedMonthEvents","showEvents","weekdaysShort","month","format","MonthNav","saturday","clone","weekday","sunday","react_default","a","createElement","className","width","style","initialiseEvents","day","setState","date","_this2","currentMonthView","currentSelectedDay","monthEvents","weeks","done","monthView","subtract","weekView","count","monthIndex","push","Calendar_Week","previousCurrentNextView","selected","select","add","allEvents","event1","title","body","event2","event3","event4","event5","event6","event7","event8","event9","event10","sort","b","Date","i","length","_this3","weekdays","map","key","previous","next","onClick","e","renderWeeks","Calendar_Events","React","Component","Events","monthEventsRendered","event","dayEventsRendered","isSameOrAfter","Week","days","dayHasEvents","j","isSame","name","substring","number","isCurrentMonth","isToday","hasEvents","isWeekend","Calendar_Day","Day","Line","_ref","color","position","content","height","background","borderRadius","marginTop","marginLeft","DoubleLine","_ref2","dposition","left","TripleLine","_ref3","value","index","s","margin","App","Calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fea4e955.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport './calendar.css';\r\n\r\nexport default class Calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.width = props.width || \"350px\";\r\n        this.style = props.style || {};\r\n        this.style.width = this.width;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initialiseEvents();\r\n    }\r\n\r\n    state = {\r\n        selectedMonth: moment(),\r\n        selectedDay: moment().startOf(\"day\"),\r\n        showing: false,\r\n        showCurrentWeek: false,\r\n        selectedMonthEvents: [],\r\n        showEvents: false\r\n    };\r\n\r\n    weekdaysShort = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n    month = () => {\r\n        return this.state.selectedMonth.format(\"MMMM\");\r\n    };\r\n\r\n    MonthNav = () => {\r\n        let saturday = this.state.selectedMonth.clone().weekday(0).format(\"D\");\r\n        let sunday = this.state.selectedMonth.clone().weekday(6).format(\"D\");\r\n        return (\r\n            <span className={this.state.showCurrentWeek ? \"label-month-week\" : \"label-month\"}>\r\n                {this.state.showCurrentWeek ? this.month() + \" \" + saturday + \"-\" + sunday : this.month()}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    select(day) {\r\n        this.setState({\r\n            selectedMonth: day.date,\r\n            selectedDay: day.date.clone(),\r\n            showEvents: true\r\n        });\r\n    }\r\n\r\n    renderWeeks() {\r\n        const currentMonthView = this.state.selectedMonth;\r\n        const currentSelectedDay = this.state.selectedDay;\r\n        const monthEvents = this.state.selectedMonthEvents;\r\n        const showCurrentWeek = this.state.showCurrentWeek;\r\n\r\n        let weeks = [];\r\n        let done = false;\r\n        let monthView = currentMonthView\r\n            .clone()\r\n            .startOf(\"month\")\r\n            .subtract(1, \"d\")\r\n            .day(\"Sunday\");\r\n        let weekView = currentMonthView.clone().startOf(\"week\");\r\n        let count = 0;\r\n        let monthIndex = monthView.month();\r\n        if (!showCurrentWeek) {\r\n            while (!done) {\r\n                weeks.push(\r\n                    <Week\r\n                        previousCurrentNextView={monthView.clone()}\r\n                        currentMonthView={currentMonthView}\r\n                        monthEvents={monthEvents}\r\n                        showCurrentWeek={showCurrentWeek}\r\n                        selected={currentSelectedDay}\r\n                        select={day => this.select(day)}\r\n                    />\r\n                );\r\n                monthView.add(1, \"w\");\r\n                done = count++ > 2 && monthIndex !== monthView.month();\r\n                monthIndex = monthView.month();\r\n            }\r\n        } else if (showCurrentWeek) {\r\n            while (!done) {\r\n                weeks.push(\r\n                    <Week\r\n                        previousCurrentNextView={weekView.clone()}\r\n                        currentMonthView={currentMonthView}\r\n                        monthEvents={monthEvents}\r\n                        showCurrentWeek={showCurrentWeek}\r\n                        selected={currentSelectedDay}\r\n                        select={day => this.select(day)}\r\n                    />\r\n                );\r\n                weekView.add(1, \"w\");\r\n                done = count++ < 2;\r\n\r\n            }\r\n        }\r\n        return weeks;\r\n\r\n    }\r\n\r\n    initialiseEvents() {\r\n        const monthEvents = this.state.selectedMonthEvents;\r\n\r\n        let allEvents = [];\r\n\r\n        let event1 = {\r\n            title: \"Event 1 - Meeting\",\r\n            date: moment(\"04/10/2019\", 'MM/DD/YYYY').add(10, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event2 = {\r\n            title: \"Event 2 - Meeting\",\r\n            date: moment(\"04/15/2019\", 'MM/DD/YYYY').add(12, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event3 = {\r\n            title: \"Event 3 - Cinema\",\r\n            date: moment(\"04/23/2019\", 'MM/DD/YYYY').add(17, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event4 = {\r\n            title: \"Event 4 - Theater\",\r\n            date: moment(\"04/23/2019\", 'MM/DD/YYYY').add(20, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event5 = {\r\n            title: \"Event 5 - Drinks\",\r\n            date: moment(\"04/23/2019\", 'MM/DD/YYYY').add(12, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event6 = {\r\n            title: \"Event 6 - Diving\",\r\n            date: moment(\"04/29/2019\", 'MM/DD/YYYY').add(13, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event7 = {\r\n            title: \"Event 7 - Tennis\",\r\n            date: moment(\"04/29/2019\", 'MM/DD/YYYY').add(14, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event8 = {\r\n            title: \"Event 8 - Swimming\",\r\n            date: moment(\"05/14/2019\", 'MM/DD/YYYY').add(17, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event9 = {\r\n            title: \"Event 9 - Chilling\",\r\n            date: moment(\"05/22/2019\", 'MM/DD/YYYY').add(16, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        let event10 = {\r\n            title: \"Event 10 - Riding\",\r\n            date: moment(\"06/10/2019\", 'MM/DD/YYYY').add(8, \"h\"),\r\n            body: \"event body\"\r\n        };\r\n\r\n        allEvents.push(event1);\r\n        allEvents.push(event2);\r\n        allEvents.push(event3);\r\n        allEvents.push(event4);\r\n        allEvents.push(event5);\r\n        allEvents.push(event6);\r\n        allEvents.push(event7);\r\n        allEvents.push(event8);\r\n        allEvents.push(event9);\r\n        allEvents.push(event10);\r\n\r\n        allEvents.sort(function compare(a, b) {\r\n            let dateA = new Date(a.date);\r\n            let dateB = new Date(b.date);\r\n            return dateA - dateB;\r\n        });\r\n\r\n        for (let i = 0; i < allEvents.length; i++) {\r\n            monthEvents.push(allEvents[i]);\r\n        }\r\n\r\n        this.setState({\r\n            selectedMonthEvents: monthEvents\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\r\n        let weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day} className=\"week-day\">{day}</td>\r\n            )\r\n        });\r\n\r\n        const {showing} = this.state;\r\n        const previous = this.state.selectedMonth.clone().subtract(1, \"month\").format('MMM');\r\n        const next = this.state.selectedMonth.clone().add(1, \"month\").format('MMM');\r\n        return (\r\n            <div className=\"calendar-container\" style={this.style}>\r\n                <div className=\"calendar-header\">\r\n                    {this.state.showCurrentWeek &&\r\n                    <span className=\"prev\" onClick={(e) => {\r\n                        this.setState({\r\n                            selectedMonth: this.state.selectedMonth.subtract(1, \"week\")\r\n                        });\r\n                    }}>Prev</span>\r\n                    }\r\n                    {!this.state.showCurrentWeek &&\r\n                    <span className=\"prev\" onClick={(e) => {\r\n                        this.setState({\r\n                            selectedMonth: this.state.selectedMonth.subtract(1, \"month\")\r\n                        });\r\n                    }}>{previous}</span>\r\n                    }\r\n                    <span className=\"current-month\">\r\n                        {this.MonthNav()}\r\n                    </span>\r\n                    {this.state.showCurrentWeek &&\r\n                    <span className=\"next\" onClick={(e) => {\r\n                        this.setState({\r\n                            selectedMonth: this.state.selectedMonth.add(1, \"week\")\r\n                        });\r\n                    }}>Next</span>\r\n                    }\r\n                    {!this.state.showCurrentWeek &&\r\n                    <span className=\"next\" onClick={(e) => {\r\n                        this.setState({\r\n                            selectedMonth: this.state.selectedMonth.add(1, \"month\")\r\n                        });\r\n                    }}>{next}</span>\r\n                    }\r\n                    <span>\r\n                        <span className={this.state.showing ? \"arrow clicked\" : \"arrow\"}\r\n                              onClick={() => this.setState({showing: !showing})}/>\r\n                        {showing ?\r\n                            <div className=\"block\">\r\n                                <span className=\"thisWeek\" onClick={() => this.setState({showCurrentWeek: true})}>This week</span>\r\n                                <span className=\"thisMonth\" onClick={() => this.setState({showCurrentWeek: false})}>This month</span>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <table className=\"calendar\">\r\n                        <thead>\r\n                        <tr>\r\n                            {weekdays}\r\n                        </tr>\r\n                        </thead>\r\n                    </table>\r\n                    {this.renderWeeks()}\r\n                </div>\r\n                {this.state.showEvents &&\r\n                <Events\r\n                    selectedDay={this.state.selectedDay}\r\n                    selectedMonthEvents={this.state.selectedMonthEvents}\r\n                />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Events extends React.Component {\r\n    render() {\r\n        const currentSelectedDay = this.props.selectedDay;\r\n        const monthEvents = this.props.selectedMonthEvents;\r\n\r\n        const monthEventsRendered = monthEvents.map((event) => {\r\n            return (\r\n                <div className=\"events\">\r\n                    <div className=\"event-date\">{event.date.format(\"dddd, D MMMM\")}\r\n                    </div>\r\n                    <div key={event.title} className=\"event-container\">\r\n                        <div className=\"event-title\">{event.title}</div>\r\n\r\n                        <div className=\"event-time\">\r\n                            {event.date.format(\"HH:mm\")}\r\n                        </div>\r\n                        <div className=\"event-body\">\r\n                            {event.body}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let dayEventsRendered = [];\r\n        for (let i = 0; i < monthEventsRendered.length; i++) {\r\n            if (monthEvents[i].date.isSameOrAfter(currentSelectedDay, \"day\")) {\r\n                dayEventsRendered.push(monthEventsRendered[i]);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"day-events\">\r\n                {dayEventsRendered}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Week extends React.Component {\r\n    render() {\r\n        let days = [];\r\n        let date = this.props.previousCurrentNextView;\r\n        let currentMonthView = this.props.currentMonthView;\r\n        let selected = this.props.selected;\r\n        let select = this.props.select;\r\n        let monthEvents = this.props.monthEvents;\r\n        let showCurrentWeek = this.props.showCurrentWeek;\r\n        let count = 0;\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            let dayHasEvents = false;\r\n\r\n            for (let j = 0; j < monthEvents.length; j++) {\r\n                if (monthEvents[j].date.isSame(date, \"day\")) {\r\n                    dayHasEvents = true;\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            let day = {\r\n                name: date.format(\"dd\").substring(0, 1),\r\n                number: date.date(),\r\n                isCurrentMonth: date.month() === currentMonthView.month(),\r\n                isToday: date.isSame(new Date(), \"day\"),\r\n                date: date,\r\n                hasEvents: dayHasEvents,\r\n                isWeekend: date.format(\"dddd\") === \"Saturday\" || date.format(\"dddd\") === \"Sunday\"\r\n            };\r\n            days.push(<Day day={day} selected={selected} count={count} select={select} showCurrentWeek={showCurrentWeek}\r\n                           monthEvents={monthEvents}/>);\r\n            date = date.clone();\r\n            date.add(1, \"d\");\r\n        }\r\n        return (\r\n            <div className=\"row week\">\r\n                {days}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Day extends React.Component {\r\n    render() {\r\n        let day = this.props.day;\r\n        let selected = this.props.selected;\r\n        let select = this.props.select;\r\n        let showCurrentWeek = this.props.showCurrentWeek;\r\n        let monthEvents = this.props.monthEvents;\r\n        let count = this.props.count;\r\n\r\n        const Line = ({color, position}) => (\r\n            <div>\r\n                <span\r\n                    style={{\r\n                        content: \"\",\r\n                        width: 26,\r\n                        position: position,\r\n                        height: 3,\r\n                        background: color,\r\n                        borderRadius: 6,\r\n                        marginTop: 35,\r\n                        marginLeft: -4\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n        const DoubleLine = ({color, position, dposition}) => (\r\n            <div style={{position: dposition}}>\r\n                <span\r\n                    style={{\r\n                        content: \"\",\r\n                        width: 10,\r\n                        position: position,\r\n                        height: 3,\r\n                        background: color,\r\n                        borderRadius: 6,\r\n                        marginTop: 35,\r\n                        left: -3\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        content: \"\",\r\n                        width: 10,\r\n                        position: position,\r\n                        height: 3,\r\n                        background: color,\r\n                        borderRadius: 6,\r\n                        marginTop: 35,\r\n                        marginLeft: 10\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n        const TripleLine = ({color, position, dposition}) => (\r\n            <div style={{position: dposition}}>\r\n                <span\r\n                    style={{\r\n                        content: \"\",\r\n                        width: 7,\r\n                        position: position,\r\n                        height: 3,\r\n                        background: color,\r\n                        borderRadius: 6,\r\n                        marginTop: 35,\r\n                        left: -5\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        content: \"\",\r\n                        width: 7,\r\n                        position: position,\r\n                        height: 3,\r\n                        background: color,\r\n                        borderRadius: 6,\r\n                        marginTop: 35,\r\n                        marginLeft: 5\r\n                    }}\r\n                />\r\n                <span\r\n                    style={{\r\n                        content: \"\",\r\n                        width: 7,\r\n                        position: position,\r\n                        height: 3,\r\n                        background: color,\r\n                        borderRadius: 6,\r\n                        marginTop: 35,\r\n                        marginLeft: 15\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n        return (\r\n            <div\r\n                className={\r\n                    \"day\" +\r\n                    (day.isCurrentMonth && !showCurrentWeek ? \"\" : \" different-month\") +\r\n                    (!day.isCurrentMonth && !showCurrentWeek ? \"\" : \" diff-month\") +\r\n                    (day.date.isSame(selected) ? \" selected\" : \" \") +\r\n                    (day.isWeekend ? \"day weekend\" : \"\") +\r\n                    (day.isToday ? \"day current-day\" : \"\") +\r\n                    (day.isToday && day.isWeekend ? \"day current-day weekend\" : \"\") +\r\n                    (day.isWeekend && day.date.isSame(selected) ? \"day weekend selected\" : \"\") +\r\n                    (day.isToday && day.date.isSame(selected) ? \"day current-day selected\" : \"\")\r\n                }\r\n                onClick={() => select(day)}\r\n            >\r\n                {monthEvents.map((value, index) => {\r\n                    let s = day.date.isSame(monthEvents[index].date, \"day\");\r\n                    if (count === 1 && s) {\r\n                        return <Line color=\"#48C1C2\" position=\"absolute\"/>;\r\n                    } else if (count === 2 && s) {\r\n                        return <DoubleLine color=\"#48C1C2\" position=\"absolute\" dposition=\"relative\"/>;\r\n                    } else if (count === 3 && s) {\r\n                        return <TripleLine color=\"#48C1C2\" position=\"absolute\" dposition=\"relative\"/>;\r\n                    } else if (count > 3 && s) {\r\n                        return <Line color=\"#48C1C2\" position=\"absolute\"/>;\r\n                    }\r\n                })}\r\n                <div className=\"day-number\">{day.number}</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\nimport './App.css';\n\nimport Calendar from './Components/Calendar/';\n\nconst style = {\n    position: \"relative\",\n    margin: \"50px auto\"\n};\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Calendar style={style} width=\"415px\"/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}